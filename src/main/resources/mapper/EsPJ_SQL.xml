<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="EsPJ">
	<select id="getPostCnt" parameterType="hashmap" resultType="Integer">

 SELECT COUNT(*) CNT
		FROM(SELECT POST_NO, CATEGORY_NO, TITLE, HIT, BOARD_DATE, MEM_NO, GRADE_NO, CASE WHEN LIKE_CNT IS NULL
                                                                                 THEN 0
                                                                                 ELSE LIKE_CNT
                                                                            END AS LIKE_CNT, NIC, RK
		      FROM(SELECT B.POST_NO, BC.CATEGORY_NO, CASE WHEN LENGTH(B.TITLE) > 25
		                                                  THEN SUBSTR(B.TITLE,1 ,25) || CASE WHEN BCMT.CMT_CNT IS NULL
		                                                                                     THEN ' [0]'
		                                                                                     ELSE ' [' || BCMT.CMT_CNT || ']'
		                                                                                END
		                                                  ELSE B.TITLE || CASE WHEN BCMT.CMT_CNT IS NULL
		                                                                       THEN ' [0]'
		                                                                      ELSE ' [' || BCMT.CMT_CNT || ']'
		                                                                  END
		                                                  END AS TITLE, B.HIT, TO_CHAR(B.BOARD_DATE, 'YYYY-MM-DD') AS BOARD_DATE,
		                  M.MEM_NO, G.GRADE_NO, BLIKE.LIKE_CNT, M.NIC, ROW_NUMBER() OVER(ORDER BY B.BOARD_DATE DESC) AS RK, B.DEL
		           FROM BOARD B INNER JOIN MEM M
		                                ON B.MEM_NO = M.MEM_NO AND LEAVE_DATE IS NULL
		           				INNER JOIN BOARD_CATEGORY BC
		                                ON B.CATEGORY_NO = BC.CATEGORY_NO AND B.CATEGORY_NO =1
		                                AND B.DEL = 1
		                        INNER JOIN GRADE G
		                                ON B.MEM_NO = G.MEM_NO
		                        INNER JOIN GRADE_CATEGORY GC
		                                ON G.GRADE_NO = GC.GRADE_NO
		                        LEFT OUTER JOIN (SELECT B.POST_NO, COUNT(*) AS CMT_CNT
		                                         FROM BOARD B INNER JOIN BOARD_CMT BC
		                                                              ON B.POST_NO = BC.POST_NO
		                                                              AND BC.DEL = 1
		                                         GROUP BY B.POST_NO) BCMT
		                                     ON B.POST_NO = BCMT.POST_NO   
		                        LEFT OUTER JOIN (SELECT POST_NO, COUNT(*) AS LIKE_CNT
		                                         FROM BOARD_LIKE
		                                         GROUP BY POST_NO)BLIKE 
		                                     ON B.POST_NO = BLIKE.POST_NO)
		      WHERE RK BETWEEN 1 AND 5
		UNION
		SELECT POST_NO, CATEGORY_NO, TITLE, HIT, BOARD_DATE, MEM_NO, GRADE_NO, CASE WHEN LIKE_CNT IS NULL
                                                                            THEN 0
                                                                            ELSE LIKE_CNT
                                                                       END AS LIKE_CNT, NIC, ROW_NUMBER() OVER(ORDER BY BOARD_DATE DESC) AS RK
		      FROM(SELECT B.POST_NO, BC.CATEGORY_NO, CASE WHEN LENGTH(B.TITLE) > 25
		                                                  THEN SUBSTR(B.TITLE,1 ,25) || CASE WHEN BCMT.CMT_CNT IS NULL
		                                                                                     THEN ' [0]'
		                                                                                     ELSE ' [' || BCMT.CMT_CNT || ']'
		                                                                                END
		                                                  ELSE B.TITLE || CASE WHEN BCMT.CMT_CNT IS NULL
		                                                                       THEN ' [0]'
		                                                                      ELSE ' [' || BCMT.CMT_CNT || ']'
		                                                                  END
		                                                  END AS TITLE, B.HIT, TO_CHAR(B.BOARD_DATE, 'YYYY-MM-DD') AS BOARD_DATE,
		                  M.MEM_NO, G.GRADE_NO, BLIKE.LIKE_CNT, M.NIC, B.DEL
		           FROM BOARD B INNER JOIN MEM M
		                                ON B.MEM_NO = M.MEM_NO AND LEAVE_DATE IS NULL
		           				INNER JOIN BOARD_CATEGORY BC
		                                ON B.CATEGORY_NO = BC.CATEGORY_NO
		                        INNER JOIN GRADE G
		                                ON B.MEM_NO = G.MEM_NO
		                        INNER JOIN GRADE_CATEGORY GC
		                                ON G.GRADE_NO = GC.GRADE_NO
		                        LEFT OUTER JOIN (SELECT B.POST_NO, COUNT(*) AS CMT_CNT
		                                         FROM BOARD B INNER JOIN BOARD_CMT BC
		                                                              ON B.POST_NO = BC.POST_NO
		                                                              AND BC.DEL = 1
		                                         GROUP BY B.POST_NO) BCMT
		                                     ON B.POST_NO = BCMT.POST_NO   
		                        LEFT OUTER JOIN (SELECT POST_NO, COUNT(*) AS LIKE_CNT
		                                         FROM BOARD_LIKE
		                                         GROUP BY POST_NO)BLIKE 
		                                     ON B.POST_NO = BLIKE.POST_NO
                                WHERE B.DEL !=0)
		      WHERE 1=1
 				<choose>
					<when test="gradeNo == 0">
						AND (GRADE_NO = 1 OR GRADE_NO = 2) 
					</when>
					<when test="gradeNo == 2">
						AND GRADE_NO = 2
					</when>
					<when test="gradeNo == 1">
						AND GRADE_NO = 1
					</when>
					<when test="gradeNo == 3">
						AND MEM_NO = #{MEM_NO}
					</when>
				</choose>
				<choose>
					<when test="categoryNo == 0">
						AND CATEGORY_NO != 1
					</when>
					<when test="categoryNo == 2">
						AND CATEGORY_NO = 2
					</when>
					<when test="categoryNo == 3">
						AND CATEGORY_NO = 3
					</when>
					<when test="categoryNo == 4">
						AND CATEGORY_NO = 4
					</when>
				</choose>
	                <if test="boardSearchTxt != null and boardSearchTxt !=''">
						<choose>
							<when test="boardSearchFilter == 0">
									AND NIC LIKE '%' || #{boardSearchTxt} || '%' OR TITLE LIKE '%' || #{boardSearchTxt} || '%'
							</when>
							<when test="boardSearchFilter == 1">
									AND TITLE LIKE '%' || #{boardSearchTxt} || '%'
							</when>
							<when test="boardSearchFilter == 2">
									AND NIC LIKE '%' || #{boardSearchTxt} || '%'
							</when>
						</choose>
					</if> 
					) 
	</select>
	
	<select id="getPostList" parameterType="hashmap" resultType="hashmap">
		 SELECT *
		FROM(SELECT POST_NO, CATEGORY_NO, TITLE, HIT, BOARD_DATE, MEM_NO, GRADE_NO, CASE WHEN LIKE_CNT IS NULL
                                                                                 THEN 0
                                                                                 ELSE LIKE_CNT
                                                                            	END AS LIKE_CNT, NIC, RK
		      FROM(SELECT B.POST_NO, BC.CATEGORY_NO, CASE WHEN LENGTH(B.TITLE) > 25
		                                                  THEN SUBSTR(B.TITLE,1 ,25) || CASE WHEN BCMT.CMT_CNT IS NULL
		                                                                                     THEN ' [0]'
		                                                                                     ELSE ' [' || BCMT.CMT_CNT || ']'
		                                                                                END
		                                                  ELSE B.TITLE || CASE WHEN BCMT.CMT_CNT IS NULL
		                                                                       THEN ' [0]'
		                                                                      ELSE ' [' || BCMT.CMT_CNT || ']'
		                                                                  END
		                                                  END AS TITLE, B.HIT, TO_CHAR(B.BOARD_DATE, 'YYYY-MM-DD') AS BOARD_DATE,
		                  M.MEM_NO, G.GRADE_NO, BLIKE.LIKE_CNT, M.NIC, ROW_NUMBER() OVER(ORDER BY B.BOARD_DATE DESC) AS RK, B.DEL
		           FROM BOARD B INNER JOIN MEM M
		                                ON B.MEM_NO = M.MEM_NO AND LEAVE_DATE IS NULL
		           				INNER JOIN BOARD_CATEGORY BC
		                                ON B.CATEGORY_NO = BC.CATEGORY_NO AND B.CATEGORY_NO =1
		                                AND B.DEL = 1
		                        INNER JOIN GRADE G
		                                ON B.MEM_NO = G.MEM_NO
		                        INNER JOIN GRADE_CATEGORY GC
		                                ON G.GRADE_NO = GC.GRADE_NO
		                        LEFT OUTER JOIN (SELECT B.POST_NO, COUNT(*) AS CMT_CNT
		                                         FROM BOARD B INNER JOIN BOARD_CMT BC
		                                                              ON B.POST_NO = BC.POST_NO
		                                                              AND BC.DEL = 1
		                                         GROUP BY B.POST_NO) BCMT
		                                     ON B.POST_NO = BCMT.POST_NO   
		                        LEFT OUTER JOIN (SELECT POST_NO, COUNT(*) AS LIKE_CNT
		                                         FROM BOARD_LIKE
		                                         GROUP BY POST_NO)BLIKE 
		                                     ON B.POST_NO = BLIKE.POST_NO)
		      WHERE RK BETWEEN 1 AND 5
		UNION
		SELECT POST_NO, CATEGORY_NO, TITLE, HIT, BOARD_DATE, MEM_NO, GRADE_NO, CASE WHEN LIKE_CNT IS NULL
                                                                            THEN 0
                                                                            ELSE LIKE_CNT
                                                                       END AS LIKE_CNT, NIC, ROW_NUMBER() OVER(ORDER BY BOARD_DATE DESC) AS RK
		      FROM(SELECT B.POST_NO, BC.CATEGORY_NO, CASE WHEN LENGTH(B.TITLE) > 25
		                                                  THEN SUBSTR(B.TITLE,1 ,25) || CASE WHEN BCMT.CMT_CNT IS NULL
		                                                                                     THEN ' [0]'
		                                                                                     ELSE ' [' || BCMT.CMT_CNT || ']'
		                                                                                END
		                                                  ELSE B.TITLE || CASE WHEN BCMT.CMT_CNT IS NULL
		                                                                       THEN ' [0]'
		                                                                      ELSE ' [' || BCMT.CMT_CNT || ']'
		                                                                  END
		                                                  END AS TITLE, B.HIT, TO_CHAR(B.BOARD_DATE, 'YYYY-MM-DD') AS BOARD_DATE,
		                  M.MEM_NO, G.GRADE_NO, BLIKE.LIKE_CNT, M.NIC, B.DEL
		           FROM BOARD B INNER JOIN MEM M
		                                ON B.MEM_NO = M.MEM_NO AND LEAVE_DATE IS NULL
		           				INNER JOIN BOARD_CATEGORY BC
		                                ON B.CATEGORY_NO = BC.CATEGORY_NO
		                        INNER JOIN GRADE G
		                                ON B.MEM_NO = G.MEM_NO
		                        INNER JOIN GRADE_CATEGORY GC
		                                ON G.GRADE_NO = GC.GRADE_NO
		                        LEFT OUTER JOIN (SELECT B.POST_NO, COUNT(*) AS CMT_CNT
		                                         FROM BOARD B INNER JOIN BOARD_CMT BC
		                                                              ON B.POST_NO = BC.POST_NO
		                                                              AND BC.DEL = 1
		                                         GROUP BY B.POST_NO) BCMT
		                                     ON B.POST_NO = BCMT.POST_NO   
		                        LEFT OUTER JOIN (SELECT POST_NO, COUNT(*) AS LIKE_CNT
		                                         FROM BOARD_LIKE
		                                         GROUP BY POST_NO)BLIKE 
		                                     ON B.POST_NO = BLIKE.POST_NO
                                WHERE B.DEL !=0)
		      WHERE 1=1
              <choose>
				<when test="gradeNo == 0">
					AND (GRADE_NO = 1 OR GRADE_NO = 2) 
				</when>
				<when test="gradeNo == 2">
					AND GRADE_NO = 2
				</when>
				<when test="gradeNo == 1">
					AND GRADE_NO = 1
				</when>
				<when test="gradeNo == 3">
					AND MEM_NO = #{MEM_NO}
				</when>
			</choose>
			<choose>
				<when test="categoryNo == 0">
					AND CATEGORY_NO != 1
				</when>
				<when test="categoryNo == 2">
					AND CATEGORY_NO = 2
				</when>
				<when test="categoryNo == 3">
					AND CATEGORY_NO = 3
				</when>
				<when test="categoryNo == 4">
					AND CATEGORY_NO = 4
				</when>
			</choose>
             <if test="boardSearchTxt != null and boardSearchTxt !=''">
				<choose>
					<when test="boardSearchFilter == 0">
							AND NIC LIKE '%' || #{boardSearchTxt} || '%' OR TITLE LIKE '%' || #{boardSearchTxt} || '%'
					</when>
					<when test="boardSearchFilter == 1">
							AND TITLE LIKE '%' || #{boardSearchTxt} || '%'
					</when>
					<when test="boardSearchFilter == 2">
							AND NIC LIKE '%' || #{boardSearchTxt} || '%'
					</when>
				</choose>
			</if>       
                     )
                    WHERE RK BETWEEN  #{startCnt} AND #{endCnt}
		      ORDER BY DECODE(CATEGORY_NO, 1,1), POST_NO DESC 
	</select>
	<select id="getPostNCnt" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) AS CNT
		FROM(SELECT POST_NO, CATEGORY_NO, TITLE, HIT, BOARD_DATE, MEM_NO, GRADE_NO, CASE WHEN LIKE_CNT IS NULL
                                                                                 THEN 0
                                                                                 ELSE LIKE_CNT
                                                                            END AS LIKE_CNT, NIC, RK
		      FROM(SELECT B.POST_NO, BC.CATEGORY_NO, CASE WHEN LENGTH(B.TITLE) > 25
		                                                  THEN SUBSTR(B.TITLE,1 ,25) || CASE WHEN BCMT.CMT_CNT IS NULL
		                                                                                     THEN ' [0]'
		                                                                                     ELSE ' [' || BCMT.CMT_CNT || ']'
		                                                                                END
		                                                  ELSE B.TITLE || CASE WHEN BCMT.CMT_CNT IS NULL
		                                                                       THEN ' [0]'
		                                                                      ELSE ' [' || BCMT.CMT_CNT || ']'
		                                                                  END
		                                                  END AS TITLE, B.HIT, TO_CHAR(B.BOARD_DATE, 'YYYY-MM-DD') AS BOARD_DATE,
		                  M.MEM_NO, G.GRADE_NO, BLIKE.LIKE_CNT, M.NIC, RANK() OVER(ORDER BY B.BOARD_DATE DESC) AS RK, B.DEL
		           FROM BOARD B INNER JOIN MEM M
		                                ON B.MEM_NO = M.MEM_NO AND LEAVE_DATE IS NULL
		           				INNER JOIN BOARD_CATEGORY BC
		                                ON B.CATEGORY_NO = BC.CATEGORY_NO AND B.CATEGORY_NO =1
		                                AND B.DEL = 1
		                        INNER JOIN GRADE G
		                                ON B.MEM_NO = G.MEM_NO
		                        INNER JOIN GRADE_CATEGORY GC
		                                ON G.GRADE_NO = GC.GRADE_NO
		                        LEFT OUTER JOIN (SELECT B.POST_NO, COUNT(*) AS CMT_CNT
		                                         FROM BOARD B INNER JOIN BOARD_CMT BC
		                                                              ON B.POST_NO = BC.POST_NO
		                                                              AND BC.DEL = 1
		                                         GROUP BY B.POST_NO) BCMT
		                                     ON B.POST_NO = BCMT.POST_NO   
		                        LEFT OUTER JOIN (SELECT POST_NO, COUNT(*) AS LIKE_CNT
		                                         FROM BOARD_LIKE
		                                         GROUP BY POST_NO)BLIKE 
		                                     ON B.POST_NO = BLIKE.POST_NO))
	</select>
	<select id="getPostNList" parameterType="hashmap" resultType="hashmap">
		SELECT *
		FROM(SELECT POST_NO, CATEGORY_NO, TITLE, HIT, BOARD_DATE, MEM_NO, GRADE_NO, CASE WHEN LIKE_CNT IS NULL
                                                                                 THEN 0
                                                                                 ELSE LIKE_CNT
                                                                            END AS LIKE_CNT, NIC, RK
		      FROM(SELECT B.POST_NO, BC.CATEGORY_NO, CASE WHEN LENGTH(B.TITLE) > 25
		                                                  THEN SUBSTR(B.TITLE,1 ,25) || CASE WHEN BCMT.CMT_CNT IS NULL
		                                                                                     THEN ' [0]'
		                                                                                     ELSE ' [' || BCMT.CMT_CNT || ']'
		                                                                                END
		                                                  ELSE B.TITLE || CASE WHEN BCMT.CMT_CNT IS NULL
		                                                                       THEN ' [0]'
		                                                                      ELSE ' [' || BCMT.CMT_CNT || ']'
		                                                                  END
		                                                  END AS TITLE, B.HIT, TO_CHAR(B.BOARD_DATE, 'YYYY-MM-DD') AS BOARD_DATE,
		                  M.MEM_NO, G.GRADE_NO, BLIKE.LIKE_CNT, M.NIC, RANK() OVER(ORDER BY B.BOARD_DATE DESC) AS RK, B.DEL
		           FROM BOARD B INNER JOIN MEM M
		                                ON B.MEM_NO = M.MEM_NO AND LEAVE_DATE IS NULL
		          			 	INNER JOIN BOARD_CATEGORY BC
		                                ON B.CATEGORY_NO = BC.CATEGORY_NO AND B.CATEGORY_NO =1
		                                AND B.DEL = 1
		                        INNER JOIN GRADE G
		                                ON B.MEM_NO = G.MEM_NO
		                        INNER JOIN GRADE_CATEGORY GC
		                                ON G.GRADE_NO = GC.GRADE_NO
		                        LEFT OUTER JOIN (SELECT B.POST_NO, COUNT(*) AS CMT_CNT
		                                         FROM BOARD B INNER JOIN BOARD_CMT BC
		                                                              ON B.POST_NO = BC.POST_NO
		                                                              AND BC.DEL = 1
		                                         GROUP BY B.POST_NO) BCMT
		                                     ON B.POST_NO = BCMT.POST_NO   
		                        LEFT OUTER JOIN (SELECT POST_NO, COUNT(*) AS LIKE_CNT
		                                         FROM BOARD_LIKE
		                                         GROUP BY POST_NO)BLIKE 
		                                     ON B.POST_NO = BLIKE.POST_NO)
		      WHERE RK BETWEEN #{startCnt} AND #{endCnt})
	</select>
	<!-- EsPJ.getPostCMTCnt -->
	<select id="getPostNo" parameterType="hashmap" resultType="Integer">
		SELECT LAST_NUMBER  
		FROM user_sequences
		where SEQUENCE_NAME = 'POST_SEQ'	
	</select>
	<insert id="addPost" parameterType="hashmap">
		INSERT INTO BOARD(POST_NO,CATEGORY_NO, MEM_NO, TITLE ,CONTENTS )
		VALUES(POST_SEQ.NEXTVAL,#{categorySelect},#{MEM_NO},#{postTitle}, #{postCon})
	</insert>
	<select id="getPost" parameterType="hashmap" resultType="hashmap">
		SELECT POST_NO, TITLE, CONTENTS, BOARD_DATE, HIT,CATEGORY_NO, CASE WHEN LIKE_CNT IS NULL
                                                         THEN 0
                                                         ELSE LIKE_CNT
                                                         END AS LIKE_CNT, POST_CMT_CNT, MEM_NO, NIC, GRADE_NO ,PHOTO_PATH
		      FROM(SELECT B.POST_NO, B.CONTENTS, BC.CATEGORY_NO, CASE WHEN LENGTH(B.TITLE) > 25
		                                                  THEN SUBSTR(B.TITLE,1 ,25)
		                                                  ELSE B.TITLE 
		                                                  END AS TITLE, B.HIT,CASE WHEN POST_CMT_CNT IS NULL
                                                                                   THEN 0
                                                                                   ELSE POST_CMT_CNT END AS POST_CMT_CNT 
                                                          , TO_CHAR(B.BOARD_DATE, 'YYYY-MM-DD') AS BOARD_DATE,
		                  M.MEM_NO, G.GRADE_NO, BLIKE.LIKE_CNT, M.NIC, B.DEL, M.PHOTO_PATH
		           FROM BOARD B INNER JOIN MEM M
		                                ON B.MEM_NO = M.MEM_NO AND LEAVE_DATE IS NULL
		           				INNER JOIN BOARD_CATEGORY BC
		                                ON B.CATEGORY_NO = BC.CATEGORY_NO
		                        INNER JOIN GRADE G
		                                ON B.MEM_NO = G.MEM_NO
		                        INNER JOIN GRADE_CATEGORY GC
		                                ON G.GRADE_NO = GC.GRADE_NO
		                        LEFT OUTER JOIN (SELECT B.POST_NO, COUNT(*) AS POST_CMT_CNT
		                                         FROM BOARD B INNER JOIN BOARD_CMT BC
		                                                              ON B.POST_NO = BC.POST_NO
		                                                              AND BC.DEL = 1
		                                         GROUP BY B.POST_NO) BCMT
		                                     ON B.POST_NO = BCMT.POST_NO   
		                        LEFT OUTER JOIN (SELECT POST_NO, COUNT(*) AS LIKE_CNT
		                                         FROM BOARD_LIKE
		                                         GROUP BY POST_NO)BLIKE 
		                                     ON B.POST_NO = BLIKE.POST_NO)
		      WHERE DEL != 0
			      <choose>
			      	<when test="newPostNo == 1">
			      	 AND POST_NO= #{postNo}
			      	</when>
			      	<when test="newPostNo != 1">
			      	 AND POST_NO= #{newPostNo}
			      	</when>
			      </choose>
	</select>
	<update id="postHit" parameterType="hashmap">
		UPDATE BOARD SET HIT = HIT + 1 
		WHERE POST_NO = #{postNo}
	</update>
	<select id="editPost" parameterType="hashmap" resultType="hashmap">
		SELECT *
		FROM BOARD
		WHERE POST_NO = #{postNo}
	</select>
	<update id="postUpdate" parameterType="hashmap">
		UPDATE BOARD SET TITLE = #{postTitle}, CONTENTS = #{postCon}, CATEGORY_NO = #{categorySelect} 
		WHERE POST_NO = #{editPostNo}
	</update>
	<update id="postDeletes" parameterType="hashmap">
		UPDATE  BOARD SET DEL = 0
		WHERE POST_NO = #{postNo}
	</update>
	<select id="likeCheck" parameterType="hashmap" resultType="hashmap">
		SELECT *
    	FROM BOARD_LIKE
    	WHERE MEM_NO = #{loginUserNo}
    	AND POST_NO = #{postNo}
	</select>
	<insert id="addLike" parameterType="hashmap">
		INSERT INTO BOARD_LIKE (POST_NO,MEM_NO)
		VALUES(#{postNo},#{loginUserNo})
	</insert>
	<insert id="likeNotf" parameterType="hashmap">
		INSERT INTO NOTF (NOTF_NO,NOTF_MEM_NO,EVENT_NO,MEM_NO, GBN_NO)
		VALUES(NOTF_SEQ.NEXTVAL,#{loginUserNo},10,#{postMem}, #{postNo})
	</insert>
	<delete id="delLike" parameterType="hashmap">
		DELETE FROM BOARD_LIKE
		WHERE MEM_NO = #{loginUserNo} AND POST_NO = #{postNo} 
	</delete>
	
	<select id="getCmtCnt" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) AS CNT
		FROM BOARD_CMT BC INNER JOIN (SELECT M.MEM_NO, M.NIC, M.PHOTO_PATH AS MEM_PHOTO_PATH, G.GRADE_NO, GC.GRADE_NAME
		                              FROM MEM M INNER JOIN GRADE G
		                                                 ON M.MEM_NO = G.MEM_NO
		                                         INNER JOIN GRADE_CATEGORY GC
		                                                 ON G.GRADE_NO = GC.GRADE_NO
		                              WHERE M.MEM_NO != 1 AND M.LEAVE_DATE IS NULL) M
		                          ON BC.MEM_NO = M.MEM_NO
		WHERE BC.POST_NO = #{postNo}
		AND BC.DEL = 1
	</select>
	
	<select id="getPostCmt" parameterType="hashmap" resultType="hashmap">
		SELECT B.POST_CMT_NO, B.MEM_NO, B.POST_NO, B.PARENTS_CMT_NO, B.CMT_CONTENTS, B.CMT_DATE, B.DEL, 
		       B.NIC, B.MEM_PHOTO_PATH, B.GRADE_NO, B.GRADE_NAME, B.RNUM
		FROM (SELECT BC.POST_CMT_NO, BC.MEM_NO, BC.POST_NO, BC.PARENTS_CMT_NO, BC.CONTENTS AS CMT_CONTENTS, 
		             TO_CHAR(BC.CMT_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CMT_DATE, BC.DEL, 
		             M.NIC, M.MEM_PHOTO_PATH, M.GRADE_NO, M.GRADE_NAME,
		             ROW_NUMBER() OVER(ORDER BY NVL(BC.PARENTS_CMT_NO, BC.POST_CMT_NO) DESC, BC.POST_CMT_NO ASC) AS RNUM
		      FROM BOARD_CMT BC INNER JOIN (SELECT M.MEM_NO, M.NIC, M.PHOTO_PATH AS MEM_PHOTO_PATH, G.GRADE_NO, GC.GRADE_NAME
		                                    FROM MEM M INNER JOIN GRADE G
		                                                       ON M.MEM_NO = G.MEM_NO
		                                               INNER JOIN GRADE_CATEGORY GC
		                                                       ON G.GRADE_NO = GC.GRADE_NO
		                                    WHERE M.MEM_NO != 1 AND M.LEAVE_DATE IS NULL) M
		                                ON BC.MEM_NO = M.MEM_NO
		      WHERE BC.POST_NO = #{postNo} 
		      AND BC.DEL = 1) B
		WHERE B.RNUM BETWEEN #{startCnt} AND #{endCnt}
	</select>
	
	<insert id="getCmtAdds" parameterType="hashmap">
		INSERT INTO BOARD_CMT(POST_CMT_NO, MEM_NO, POST_NO, CONTENTS)
		VALUES (POST_CMT_SEQ.NEXTVAL, #{loginUserNo}, #{postNo}, #{getCmtContents})
	</insert>
	
	<insert id="getCmtNotf" parameterType="hashmap">
		INSERT INTO NOTF(NOTF_NO, NOTF_MEM_NO, EVENT_NO, MEM_NO, GBN_NO)
		VALUES (NOTF_SEQ.NEXTVAL, #{loginUserNo}, 2, #{postWriteMemNo}, POST_CMT_SEQ.CURRVAL)
	</insert>
	
	<update id="getCmtEdits" parameterType="hashmap">
		UPDATE BOARD_CMT SET CONTENTS = #{getCmtContents}
		WHERE POST_CMT_NO = #{cmtNo}
	</update>
	
	<insert id="getCmtCmtAdds" parameterType="hashmap">
		INSERT INTO BOARD_CMT(POST_CMT_NO, MEM_NO, POST_NO, PARENTS_CMT_NO, CONTENTS)
		VALUES (POST_CMT_SEQ.NEXTVAL, #{loginUserNo}, #{postNo}, #{cmtNo}, #{getCmtContents})
	</insert>
	
	<insert id="getCmtCmtNotf" parameterType="hashmap">
		INSERT INTO NOTF(NOTF_NO, NOTF_MEM_NO, EVENT_NO, MEM_NO, GBN_NO)
		VALUES (NOTF_SEQ.NEXTVAL, #{loginUserNo}, 4, #{postWriteMemNo}, POST_CMT_SEQ.CURRVAL)
	</insert>
	
	<insert id="getCmtCmtNotf2" parameterType="hashmap">
		INSERT INTO NOTF(NOTF_NO, NOTF_MEM_NO, EVENT_NO, MEM_NO, GBN_NO)
		VALUES (NOTF_SEQ.NEXTVAL, #{loginUserNo}, 6, #{cmtWriteMemNo}, POST_CMT_SEQ.CURRVAL)
	</insert>
	
	<update id="getCmtDeletes" parameterType="hashmap">
		UPDATE BOARD_CMT SET DEL = 0
		WHERE POST_CMT_NO = #{cmtWriteMemNo}
	</update>
	
	<update id="getCmtCmtDeletes" parameterType="hashmap">
		UPDATE BOARD_CMT SET DEL = 0
		WHERE PARENTS_CMT_NO = #{cmtNo}
	</update>
	
</mapper>